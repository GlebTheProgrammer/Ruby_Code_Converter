[
  "puts \"Enter the string:\"",
  "",
  "\\\\ proverka na probeli",
  "",
  "mainStr = gets.chomp",
  "",
  "while mainStr == \"\"",
  "\tputs \"Error, please, enter the new string:\"",
  "\tmainStr = gets.chomp",
  "end",
  "",
  "\\\\ Ydalenie probelov",
  "",
  "tempStr = mainStr",
  "i = 0",
  "",
  "while i <= tempStr.length - 1",
  "\tif tempStr[i] == \" \" && tempStr[i + 1] == \" \"",
  "\t\ttempStr[i] = \"\"",
  "\telse",
  "\t\ti += 1",
  "end",
  "if tempStr[0] == \" \"",
  "\ttempStr[0] = \"\"",
  "end",
  "end",
  "",
  "mainStr = tempStr",
  "",
  "\\\\ Podschet kolichestva probelov",
  "",
  "i = 0",
  "probelMaxCount = 0",
  "",
  "until i != mainStr.length - 1",
  "\tif mainStr[i] == \" \"",
  "\t\tprobelCount += 1",
  "\tend",
  "end",
  "",
  "",
  "//// Ydalenie russkix symvolov",
  "",
  "i = 0",
  "engLettersArray = (\"A\"..\"Z\",\"a\"..\"z\",\" \").to_a",
  "while i <= tempStr.length - 1",
  "\tif !(engLettersArray.include? \"#{tempStr}\")",
  "\t\ttempStr[i] = \"\"",
  "\t\tif tempStr[i] == \" \"",
  "\t\t\ttempStr[i] = \"\"",
  "\t\t\tprobelMaxCount -= 1",
  "\t\tend",
  "\telse",
  "\t\ti += 1",
  "\tend",
  "end",
  "",
  "mainStr = tempStr",
  "",
  "\\\\ Ydalenie poslednogo probela, esli on syshestvyet",
  "",
  "strSize = tempStr.length",
  "i = 0",
  "while i <= tempStr.Length - 1",
  "\tif i == strSize && tempStr[i] == \" \"",
  "\t\ttempStr[i] = \"\"",
  "\t\tprobelMaxCount -= 1",
  "\tend",
  "end",
  "",
  "mainStr = tempStr",
  "",
  "puts \"Your string after formatting:\"",
  "puts mainStr",
  "",
  "mainStrSize = mainStr.length - 1",
  "wordSize = - 1",
  "probelCheck = 0",
  "i = 0",
  "",
  "for i in 0 .. mainStrSize",
  "\tif mainStr[i] == \" \"",
  "\t\tprobelCheck += 1",
  "\tend",
  "\tif probelMaxCount - probelCheck == 0",
  "\t\twordSize += 1",
  "\tend",
  "end",
  "",
  "word = \" \" * wordSize",

  "probelCheck = 0",
  "i = 0",
  "j = 0",
  "for i in 0 .. mainStrSize",
  "\tif Str[i] == \" \"",
  "\t\tprobelCheck += 1",
  "\tend",
  "\tif probelMaxCount - probelCheck == 0",
  "\t\tword[j] = mainStr[i + 1]",
  "\t\tj += 1",
  "\tend",
  "end",
  "",
  "puts \"Program took the main word:\"",
  "puts word",
  "",
  "puts \"What do you want to do?\"",
  "puts \"1) Write all the words, not equal to the last, supposing they dont have repeted letters\"",
  "puts \"2) Write all the words, not equal to the last, and delete all the consonant letters into them\"",
  "puts \"3) Calculate the numbers of letters\"",
  "puts \"4) Execute the program\"",
  "",
  "choice = 0",
  "begin",
  "\tchoiceStr = gets.chomp",
  "\tchoice = choiceStr.to_i",
  "end until choice != 1 && choice != 2 && choice != 3",
  "",
  "if choice == 1",
  "\tstart = 0",
  "\tprobelCount = 0",
  "\ti = 0",
  "\tcheck = \"\"",
  "\tputs \"The result is:\"",
  "\tfor i in 0 .. mainStrSize",
  "\t\tif mainStr[i] == \"\"",
  "\t\t\tk = 0",
  "\t\t\tfinish = i - 1",
  "\t\t\tif probelCount == 0",
  "\t\t\t\tcheck = \" \" * finish",
  "\t\t\tend",
  "\t\t\tif probelCount != 0",
  "\t\t\t\tcheck = \" \" * (finish - start + 1)",
  "\t\t\tend",
  "\t\t\tg = start",
  "\t\t\tfor g in start .. finish",
  "\t\t\t\tcheck[k] = mainStr[g]",
  "\t\t\t\tk += 1",
  "\t\t\tend",
  "\t\t\tif check != word && check.upcase != word.upcase",
  "\t\t\t\tstate = false",
  "\t\t\t\tj = 0",
  "\t\t\t\tfor j in 0 .. check.length - 2",
  "\t\t\t\t\tsymbol = check[j]",
  "\t\t\t\t\tf = k + 1",
  "\t\t\t\t\tfor f in k + 1 .. check.length - 1",
  "\t\t\t\t\t\tif symbol == check[f] || symbol.upcase == check[f] || symbol == check[f].upcase",
  "\t\t\t\t\t\t\tstate = true",
  "\t\t\t\t\t\t\tbreak",
  "\t\t\t\t\t\tend",
  "\t\t\t\t\tend",
  "\t\t\t\tif state == true",
  "\t\t\t\t\tbreak",
  "\t\t\t\tend",
  "\t\t\t\tend",
  "\t\t\tif state == true",
  "\t\t\t\tprint check + \" \"",
  "\t\t\tend",
  "\t\t\tend",
  "\t\tprobelCount += 1",
  "\t\tstart = i + 1",
  "\t\tend",
  "\tend",
  "puts \"\"",
  "end",
  "",
  "if choice == 2",
  "\tstart = 0",
  "\tprobelCount = 0",
  "\ti = 0",
  "\tcheck = \"\"",
  "\tputs \"The result is:\"",
  "\tfor i in 0 .. mainStr.Length - 1",
  "\t\tif mainStr[i] == \" \"",
  "\t\t\tk = 0",
  "\t\t\tfinish = i - 1",
  "\t\t\tif probelCount == 0",
  "\t\t\t\tcheck = \" \" * finish",
  "\t\t\tend",
  "\t\t\tif probelCount != 0",
  "\t\t\t\tcheck = \" \" * finish - start + 1",
  "\t\t\tend",
  "\t\t\tg = start",
  "\t\t\tfor g in start .. finish",
  "\t\t\t\tcheck[k] = mainStr[g]",
  "\t\t\t\tk += 1",
  "\t\t\tend",
  "\t\t\tif check != word && check.upcase != slovo.upcase",
  "\t\t\t\tj = 0",
  "\t\t\t\tfor j in 0 .. check.length - 1",
  "\t\t\t\t\ttempSymbol = check[k]",
  "\t\t\t\t\tif tempSymbol == \"a\" || tempSymbol == \"e\" || tempSymbol == \"i\" || tempSymbol == \"o\" || tempSymbol == \"u\" || tempSymbol == \"y\" || tempSymbol == \"A\" || tempSymbol == \"E\" || tempSymbol == \"I\" || tempSymbol == \"O\" || tempSymbol == \"U\" || tempSymbol == \"Y\"",
  "\t\t\t\t\t\tprint tempSymbol",
  "\t\t\t\t\telse",
  "\t\t\t\t\t\tprint \"\"",
  "\t\t\t\t\tend",
  "\t\t\t\tend",
  "\t\t\tprint \" \"",
  "\t\t\tend",
  "\t\tprobelCount += 1",
  "\t\tstart = i + 1",
  "\t\tend",
  "\tend",
  "puts \"\"",
  "end",
  "if choice == 3",
  "\tnum = 0",
  "\ti = 0",
  "\tfor i in 0 .. mainStr.length - 1",
  "\t\tsum += 1",
  "\tend",
  "\tputs \"There are #{num} elements into the string\"",
  "end",
  "if choice == 4",
  "\tabort \"Program was executed by the user\"",
  "end"
]