[
"puts \"Enter the string:\"",
"",
"\\\\ proverka na probeli",
"",
"mainStr = gets.chomp",
"",
"while mainStr == \"\"",
"	puts \"Error, please, enter the new string:\"",
"	mainStr = gets.chomp",
"end",
"",
"\\\\ Ydalenie probelov",
"",
"tempStr = mainStr",
"i = 0",
"",
"while i <= tempStr.length - 1",
"	if tempStr[i] == \" \" && tempStr[i + 1] == \" \"",
"		tempStr[i] = \"\"",
"	else",
"		i += 1",
"end",
"if tempStr[0] == \" \"", 
"	tempStr[0] = \"\"",
"end",
"end",
"",
"mainStr = tempStr",
"",
"\\\\ Podschet kolichestva probelov",
"",
"i = 0",
"probelMaxCount = 0",
"",
"until i != mainStr.length - 1",
"	if mainStr[i] == \" \"",
"		probelCount += 1",
"	end",
"end",
"",
"",
"//// Ydalenie russkix symvolov",
"",
"i = 0",
"engLettersArray = (\"A\"..\"Z\",\"a\"..\"z\",\" \").to_a",
"while i <= tempStr.length - 1",
"	if !(engLettersArray.include? \"#{tempStr}\")",
"		tempStr[i] = \"\"",
"		if tempStr[i] == \" \"",
"			tempStr[i] = \"\"",
"			probelMaxCount -= 1",
"		end",
"	else",
"		i += 1",
"	end",
"end",
"",
"mainStr = tempStr",
"",
"\\\\ Ydalenie poslednogo probela, esli on syshestvyet",
"",
"strSize = tempStr.length",
"i = 0",
"while i <= tempStr.Length - 1",
"	if i == strSize && tempStr[i] == \" \"",
"		tempStr[i] = \"\"",
"		probelMaxCount -= 1",
"	end",
"end",
"",
"mainStr = tempStr",
"",
"puts \"Your string after formatting:\"",
"puts mainStr",
"",
"mainStrSize = mainStr.length - 1",
"wordSize = - 1",
"probelCheck = 0",
"i = 0",
"",
"for i in 0 .. mainStrSize",
"	if mainStr[i] == \" \"",
"		probelCheck += 1",
"	end",
"	if probelMaxCount - probelCheck == 0",
"		wordSize += 1",
"	end",
"end",
"",
"word = \" \" * wordSize",

"probelCheck = 0",
"i = 0",
"j = 0",
"for i in 0 .. mainStrSize",
"	if Str[i] == \" \"",
"		probelCheck += 1",
"	end",
"	if probelMaxCount - probelCheck == 0",
"		word[j] = mainStr[i + 1]",
"		j += 1",
"	end",
"end",
"",
"puts \"Program took the main word:\"",
"puts word",
"",
"puts \"What do you want to do?\"",
"puts \"1) Write all the words, not equal to the last, supposing they dont have repeted letters\"",
"puts \"2) Write all the words, not equal to the last, and delete all the consonant letters into them\"",
"puts \"3) Calculate the numbers of letters\"",
"puts \"4) Execute the program\"",
"",
"choice = 0",
"begin",
"	choiceStr = gets.chomp",
"	choice = choiceStr.to_i",
"end until choice != 1 && choice != 2 && choice != 3",
"",
"if choice == 1",
"	start = 0",
"	probelCount = 0",
"	i = 0",
"	check = \"\"",
"	puts \"The result is:\"",
"	for i in 0 .. mainStrSize",
"		if mainStr[i] == \"\"",
"			k = 0",
"			finish = i - 1",
"			if probelCount == 0",
"				check = \" \" * finish",	
"			end",
"			if probelCount != 0",
"				check = \" \" * (finish - start + 1)",
"			end",
"			g = start",
"			for g in start .. finish",
"				check[k] = mainStr[g]",
"				k += 1",
"			end",
"			if check != word && check.upcase != word.upcase",
"				state = false",
"				j = 0",
"				for j in 0 .. check.length - 2",
"					symbol = check[j]",
"					f = k + 1",
"					for f in k + 1 .. check.length - 1",
"						if symbol == check[f] || symbol.upcase == check[f] || symbol == check[f].upcase",
"							state = true",
"							break",
"						end",
"					end",
"				if state == true",
"					break",
"				end",
"				end",
"			if state == true",
"				print check + \" \"",
"			end",
"			end",
"		probelCount += 1",
"		start = i + 1",
"		end",
"	end",
"puts \"\"",
"end",
"",
"if choice == 2",
"	start = 0",
"	probelCount = 0",
"	i = 0",
"	check = \"\"",
"	puts \"The result is:\"",
"	for i in 0 .. mainStr.Length - 1",
"		if mainStr[i] == \" \"",
"			k = 0",
"			finish = i - 1",
"			if probelCount == 0",
"				check = \" \" * finish",
"			end",
"			if probelCount != 0",
"				check = \" \" * finish - start + 1",
"			end",
"			g = start",
"			for g in start .. finish",
"				check[k] = mainStr[g]",
"				k += 1",
"			end",
"			if check != word && check.upcase != slovo.upcase",
"				j = 0",
"				for j in 0 .. check.length - 1",
"					tempSymbol = check[k]",
"					if tempSymbol == \"a\" || tempSymbol == \"e\" || tempSymbol == \"i\" || tempSymbol == \"o\" || tempSymbol == \"u\" || tempSymbol == \"y\" || tempSymbol == \"A\" || tempSymbol == \"E\" || tempSymbol == \"I\" || tempSymbol == \"O\" || tempSymbol == \"U\" || tempSymbol == \"Y\"",
"						print tempSymbol",
"					else",
"						print \"\"",
"					end",
"				end",
"			print \" \"",
"			end",
"		probelCount += 1",
"		start = i + 1",
"		end",
"	end",
"puts \"\"",
"end",
"if choice == 3",
"	num = 0",
"	i = 0",
"	for i in 0 .. mainStr.length - 1",
"		sum += 1",
"	end",
"	puts \"There are #{num} elements into the string\"",
"end",
"if choice == 4",
"	abort \"Program was executed by the user\"",
"end"
]